function [Y,Xf,Af] = NNMSDPIDcontroller(X,~,~)
%NNMSDPIDCONTROLLER neural network simulation function.
%
% Auto-generated by MATLAB, 09-May-2025 15:47:56.
% 
% [Y] = NNMSDPIDcontroller(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999997146387718;-0.988845176323935;-0.990208344246899];
x1_step1.gain = [1.00000158534274;1.00981623042609;0.889452713796242];
x1_step1.ymin = -1;

% Layer 1
b1 = [5.8688297381286389509;4.8468513982559944253;-3.5278452702568978694;1.8233117272439161027;-0.57891009542784999109;0.6019495279983568814;0.70661014235128472016;-3.4712594852983289506;-4.9265608273678118678;-5.5636680713040087554];
IW1_1 = [-1.6284324839795238926 0.61300217925145827902 5.9322184306582776969;-5.4156286533237585346 2.2840718820283218982 -0.91673215069966340618;0.79845141730874213959 -1.8458027059185322383 -5.2897514098109441605;-0.62594667292028971506 3.7863900190277250957 -5.5366740950543524846;2.2433543493404406455 2.5975504946450285182 -4.457757859207363893;1.2171346164738541251 5.4579697933839472768 -2.2848286850045522733;5.9770435762673681523 0.84884989006220690211 -2.3722722949642132129;-5.5804710188808170912 -2.0278827228799709559 0.90558576336348939329;-4.4203976549598342771 -4.0283677826189796534 -0.47819157394258060556;-3.0048006314919062376 1.4984014875293369951 5.1983797172689003574];

% Layer 2
b2 = [0.020036256211877146588;-0.35661915788925452331;0.19342821548659655528;-0.27830389653278253537;0.4799303526960433941;0.21248017410384476;-0.34324599318987930596;0.29708588572094718483;0.26057040271668047149;0.14803071313900567629];
LW2_1 = [-0.084110236609670360752 -0.94556688011580791731 0.65660634818642316102 -0.19723228744560930559 -0.21385059329204705869 1.1307430963976825566 -0.77291804272249797769 0.52795870082854501337 0.31516022138369614858 -0.064634449682065261977;1.0727196120552267011 0.10488708473140126443 -1.0735820939041653688 0.28236778506998572169 0.3956255043111431835 -0.26746811631665823317 0.93334813591173393377 -0.4006475139023595311 0.092002979338923804309 -0.3645930252203603561;0.29654931838525294685 0.45600519006826928381 0.099499332889927682988 -0.47512549064347614491 -0.6315336171243194352 -0.36338171806445240808 0.9346316232664640955 0.55596945426528410206 0.05036022224623170479 -0.19086278076872881249;0.81516871476664598539 0.26860884846704580209 -0.32606206086965794366 -0.34384913562809549248 -0.25442952343274577443 1.7500114803646040773 -1.1817452112198820746 -0.21152852498961433048 0.45906055275923618453 0.66085679100793615071;-0.76060626465506830929 -0.66610141608260931001 0.11926797407933338591 -0.65145295651672452397 -0.7622558840644690914 -1.1788212729242042442 0.66154735061744407432 -0.33947831585723525771 0.17652133314162943289 0.27619342787623857305;0.55172830821743001906 0.84738120919950155052 0.61102199037012983052 0.26540830514248547889 -0.034543081656044513639 0.12605023236593373981 -0.00065162864821726416975 -0.79806631798117966259 1.0688903498470374576 0.49822425582671614475;-0.78382795060694843148 0.28897773496179518515 -0.0025850205908493715384 -0.77105217696534567029 0.67607212681798911635 -0.51763335066986626565 -0.32747876793884389546 1.0208263070593486255 -0.64492502544275087661 1.0214725720614334925;0.090848141639803647873 -0.97450142826812802266 0.75261016177944739525 0.39091715662224607586 0.27429009613270405321 -1.1907819807482247221 0.67791319193100696427 0.28708976325443041899 -0.83832718348946477782 0.78280278435416117411;0.31173273194185252555 -0.11886711281903020176 0.029270834813426113707 -0.36251713010307273777 -0.0079465755361421749198 0.60542295416441782585 -0.46859094707329762564 0.15894812619663001296 -0.8063610439464414803 -0.53268243495050637826;-0.76163236752622820447 -0.14147373319299011429 -0.98405838611793705617 0.48413595735970782474 0.096966967489529862223 -0.62782094192074067163 1.2508235932640392463 -0.076088152953409413093 -0.97426140086422174935 -0.8335299295460227853];

% Layer 3
b3 = [1.7603613630960270875;1.1743927147414536805;-1.0853724331192926567;0.67240157134378708559;0.20619208253033821654;-0.23748255227286788061;-0.46349130333452442931;-1.1541532690415550189;1.0923216854413100307;-1.6882964648894063231];
LW3_2 = [-0.36599230609127358926 0.55164165981667967475 0.76277129839550972257 0.67535368525830485886 0.028120019993813760023 0.090636452383224291873 0.83176903990290029789 0.31971333721509809234 0.57173067219478290735 0.66568177262499839131;-0.47616978193214548609 -0.51174983058532852453 -0.32176333450739014186 0.57668097161904130488 0.95644481231773648133 -1.0394695476091526665 0.21500222080825606707 0.81390869240930940887 0.17320231549197756538 0.24867079815457379666;0.24526266797536941389 0.31757812144660957365 0.63766641532381473922 -0.45341833031967643253 0.17913690792241854233 -0.84402388279632989398 0.85958602780495896312 0.038151373111771386126 -0.54457489052898688797 0.85963030619394298348;-0.73127201223858473433 0.51172511828426336944 -0.27782883921349199596 0.4586666541704359501 -0.80690343486787829974 -0.8602108375057192502 0.7123850575250649797 -0.012606979775489583068 0.47495927008311644713 0.18555657953699675189;-0.82565453494892182551 -0.091553127996765473751 0.50898364592850497967 -0.045774814871159051621 -0.59898513364942052029 0.36366858785152439415 0.12671601139351076903 0.52893839602008607681 -0.75156935155317083908 -0.91376202666719352763;1.1393050652145877422 -0.70761197527269770191 -0.99920615836975945623 1.4075789495321755496 -1.3880161255184202407 -0.11184347790872267714 0.47027951350379348927 -1.0192928003732293352 0.24665514784895847811 -1.1420608871088251401;-0.74883838101272159893 -0.22896078252407495168 0.71489030580870693843 0.46375103085045865647 0.60196131970744115591 -0.44520006636681408452 0.8010276041776968059 0.040925210104062401117 0.31328065502921981222 0.62551816391580561394;-0.0070012394669236588385 -0.30066458065629203533 0.2161951308089271051 -1.0771374471593331279 0.48621920492395548363 -0.097771883098404663293 1.0272084227300621873 0.84259982510527975386 0.34214422583771381126 0.059446795439225930124;0.35172629963825569055 0.16355151032172715597 -0.26948731094917222073 0.74845061052111361288 -0.072516670101397701087 -0.74917871109047196043 -0.98304881035291391544 -0.14853029676592244268 0.57289394932507831104 0.92570732312743975179;-0.23222654802528339135 -0.53747565265388308475 -0.35120330919422093618 0.86979363188667768725 -0.51323341490195406589 -0.69474723836017959755 0.49971424565486904923 0.52905251713882084363 0.923131283917526968 -0.38365281039943099906];

% Layer 4
b4 = -0.61024105729073496729;
LW4_3 = [0.14609017217297076696 -0.084827967695343634014 -0.97425705832416165109 0.12375791767989668957 -0.15901994808320876751 -2.3891899588612637295 0.71433120798514293526 -0.54686012577405684887 -0.63968339389398087835 -0.72207711812971331344];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.180072661016317;
y1_step1.xoffset = -1.10662767303016;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = logsig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Layer 3
    a3 = tansig_apply(repmat(b3,1,Q) + LW3_2*a2);
    
    % Layer 4
    a4 = repmat(b4,1,Q) + LW4_3*a3;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a4,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(4,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
