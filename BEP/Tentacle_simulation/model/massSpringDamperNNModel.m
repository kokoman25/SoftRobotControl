function [y1] = massSpringDamperNNModel(x1)
%MASSSPRINGDAMPERNNMODEL neural network simulation function.
%
% Auto-generated by MATLAB, 28-Apr-2025 18:07:39.
% 
% [y1] = massSpringDamperNNModel(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 3xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999230697499;-0.953506555552231;-0.959936846282866];
x1_step1.gain = [1.00000054318563;1.00298182641376;1.03516113842644];
x1_step1.ymin = -1;

% Layer 1
b1 = [5.2060758582365327385;-4.6291916504951027278;2.4154218585535103259;-0.57625130776326738413;0.15262690617901297774;-1.5046936894297147091;-0.89914611706278890768;0.3451937222504653513;4.0996424059195248901;-6.3266935407486446508];
IW1_1 = [0.13808412716984597157 -2.2622916586564882913 -2.9998011894319396298;1.9960085208274560564 -0.84562973638667748855 0.72107913334814621731;-1.2812377191642287944 -1.3770884635877651547 1.3280269560271706908;-0.057263034194958914447 1.394054410395120458 1.8372693107465822848;1.1519910421974195458 1.4811205477116151652 -1.0624967151047748359;-0.75088713944716400928 -2.0916054273326829538 -0.13507600560181479143;-1.242100847258255536 0.55067141149446241499 0.085144734044811681839;-0.033541468331827556382 0.45065907962661638786 0.59388124069026948515;1.2422154346081781817 3.8775751019487429971 0.43839655914615577315;-1.5958645607500634434 -4.0430989385537605685 -0.61377116208523119223];

% Layer 2
b2 = [-1.1426652698139920794;-0.20578208936123743023;0.25065319849409350983;1.174288891306853877;0.35743820503937290267;-1.488884196376796254;-0.19862019067135197603;0.11521831571086234292;-0.35643912547863160212;0.77522504412217951852];
LW2_1 = [0.14233122630293221222 -0.930462286814195072 0.68478090306637418028 0.53203125588795885381 0.61504014383807126265 -0.036653091906686731394 0.31136082958337846227 -0.0077272078188158031808 -0.80863270357640171238 0.11039371800238147181;1.0527982528460217981 -1.3190249657358417146 -0.11954958062720653922 -0.73335664730151495228 -0.34842150331223481485 0.21327422896787878726 -0.61011859450958272344 0.91964283254690193381 -0.062921368185139589513 0.098930233250949253798;0.62854931800597069191 -0.26115584110464024059 -1.1602431779906141607 -0.3924540984676167521 0.11195777740649785759 0.72319159855037695728 -0.1211838792668123721 -1.2322432927651079115 0.095474698824282597243 -0.72895709508647377195;0.19393170556244618274 -0.98344292488974072164 -0.017784255541516535287 0.051315343308554604851 0.30025734632351952502 -0.62815090811912110969 0.10449224166970579042 -1.9431866139311950725 -0.18660890994517612129 0.28147388119078126101;0.72808092292562698322 0.27700408103312390562 0.66874987750158010336 -0.061221288741654833476 0.39458806467107138127 0.09489657812785189106 0.74377720225599752712 0.44450305904276687929 0.23230784597432263539 -0.84172649111865072147;1.1531309260067055256 -0.99602014488859069719 0.18522298246434926172 0.46388985684769712403 -0.42647495907143934124 0.46327740368205977406 0.18002619534312772065 -0.80665527033350781227 0.33250284979199895563 -0.043788540827521538201;0.3718549306820932987 0.37760926647303266757 0.26519092267528771023 0.16792953616786107651 -0.32001522361726753019 0.78007849671310669493 0.24202183925361295258 -1.0465103807242828182 -0.41222367321942049445 0.78007511368911564009;0.55888641963730611995 0.78480070357735642883 0.50801654644078597656 -0.2597326295599891588 0.3978124662340230544 0.60022725044830826935 -0.83256389738218727903 0.61679891893366201039 -0.74282297757081017231 -0.5804378996695309656;1.405491094493875659 0.061059708385085079141 -0.11059162687390323987 0.17803945461364895086 0.22313220082713636216 -0.13470048663332334637 0.41125079143079407151 -0.99369447034575242306 0.084415914087943230704 0.068369262064814972923;-0.48964196932743447865 -0.64396609594518194886 -0.12198203004160061702 -0.18323829317409728867 0.57260071177239579843 -0.99224287298681890235 -1.3319739811127018214 0.89753042210473366058 0.076285870395868329852 0.60228897053350227697];

% Layer 3
b3 = [-2.154082067253716648;-1.5203616700336384238;1.1652083308514362692;0.76050063028919734354;0.1906828489153565287;-0.22359313020266535776;0.46374317899021227918;-0.64055929526588506473;1.1497408337126167055;-1.7786765913835740349];
LW3_2 = [0.97347853102593429053 1.0039863796688748288 -0.81883297584417380488 -1.4953893920939433926 0.31616667023319255936 1.1843823948018090686 -0.27245524020822009525 0.074596816371676616386 0.47480614331677922779 0.15162698851111616749;0.72646987268188001341 0.72881279785156705131 1.0451652895170331359 1.2141070714245407736 0.36307443459711713496 1.2408911728527569629 0.052805771654818312033 -0.27736869414334841544 0.95398623982055408277 0.037113704726723407978;0.14203859517173195171 0.42585386789322460244 -0.80653960573698468828 -0.18798493754445219639 -0.36315142395404853559 0.26742177848577597388 -0.81560723140704471934 0.096326749288305049679 -0.36916331455510958959 -0.54842413696102032539;-0.55248344471320542937 -0.94176740195691410751 -0.39110694050577732295 0.40315487917045034205 -0.34577578602573860733 0.63081171540857639002 -0.14863934340661844047 0.81142052124245567235 -0.14742126796698659663 -0.18759677110366634878;0.096073673430873626766 -0.25837954595610218567 0.10386630607327836107 -0.54295507910392559747 -0.1131553696809975279 -0.45888647452803038584 -0.044397460184204630418 -0.121938396087909115 0.21736871719363010103 -0.013739043482813462216;-0.55309758194026636957 0.9768608037083861273 -0.34753086311041075929 -0.44058299447607801591 -0.67439670252088923519 0.042649149214357327808 -0.12133596566914593706 0.52341690078762936889 -0.98707659950748005695 1.1904605036104212168;-0.10062336933064472411 1.2243753883605048571 0.10307973601938331953 -0.2841009203787566717 -0.39286145345162909459 1.1802385340988146289 -0.39541383261451024111 0.58532389410339624725 -0.15892071421702158585 0.70187582119980362894;-0.70993531444067414782 -0.297739031864022341 0.036306512993396100608 0.75048528624683297217 0.49126404985921873214 -0.19441820611726057244 1.0039681179990129767 0.30359484898945998665 -0.34449906365339161285 0.053144790640210756716;0.82150210510339105596 0.2025889688720707571 -0.30730140360794888643 -0.48555370929382629663 0.19629440252758098562 0.13314841495542723004 0.46428603102843934991 1.063504710043698287 0.28233690262203287036 -1.009489919078424558;-0.077425725069676945567 0.088213855142474803528 -0.68273827583972324096 0.061545236724784894988 0.45587705024571612 0.55148368777401246543 0.61724306122679728492 -0.0037583113371463614666 -1.4061951217032653272 -0.02837772567046054073];

% Layer 4
b4 = [-1.0889173697249403538;0.33263105248023294713;0.075586794664487005901];
LW4_3 = [0.022882271299771370088 -1.3702303528523671616 -2.8681288648424856369 1.7965054324477069958 1.2600112131393819137 0.55792609320201336232 0.51824989094997464534 -0.26836573150733261661 0.70704215470410491928 -1.4910100131286818659;-0.076271175742729846458 0.37670828333025963008 0.5003438826124779748 -1.5986955966347002889 1.3703941115058104749 -0.22711913278238976543 -0.18955974370765341086 -1.2958587903106244532 0.16938688778577334904 -0.9285120052615664088;0.42683248566950204861 -0.47452295432721713908 0.58554108393369741492 0.71604993185891552265 1.4326793815480522998 0.25591163936180089111 0.27582401190026156756 0.082905983314461556555 0.27451621100084427907 0.96047604188145563331];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1.00000054318563;1.00298182641376;1.03516113842644];
y1_step1.xoffset = [-0.999999230697499;-0.953506555552231;-0.959936846282866];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = logsig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Layer 3
a3 = tansig_apply(repmat(b3,1,Q) + LW3_2*a2);

% Layer 4
a4 = repmat(b4,1,Q) + LW4_3*a3;

% Output 1
y1 = mapminmax_reverse(a4,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
  a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
